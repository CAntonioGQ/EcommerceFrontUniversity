{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CartComponent = class CartComponent {\n  constructor(purchaseService, router, authService) {\n    this.purchaseService = purchaseService;\n    this.router = router;\n    this.authService = authService;\n    this.cartItems = [];\n    this.loading = false;\n    this.error = null;\n    this.isLoggedIn = false;\n  }\n  ngOnInit() {\n    this.loadCartFromLocalStorage();\n    this.checkLoginStatus();\n  }\n  checkLoginStatus() {\n    this.isLoggedIn = this.authService.isLoggedIn();\n  }\n  loadCartFromLocalStorage() {\n    this.loading = true;\n    try {\n      const cartData = localStorage.getItem('cart');\n      if (cartData) {\n        this.cartItems = JSON.parse(cartData);\n      }\n      this.loading = false;\n    } catch (e) {\n      this.error = 'Error al cargar el carrito';\n      this.loading = false;\n    }\n  }\n  saveCartToLocalStorage() {\n    try {\n      localStorage.setItem('cart', JSON.stringify(this.cartItems));\n    } catch (e) {\n      this.error = 'Error al guardar el carrito';\n    }\n  }\n  addToCart(product) {\n    this.cartItems.push(product);\n    this.saveCartToLocalStorage();\n  }\n  removeFromCart(product) {\n    const index = this.cartItems.findIndex(item => item.idProduct === product.idProduct);\n    if (index > -1) {\n      this.cartItems.splice(index, 1);\n      this.saveCartToLocalStorage();\n    }\n  }\n  getTotal() {\n    return this.cartItems.reduce((total, item) => {\n      const itemPrice = this.parsePrice(item.price);\n      return total + itemPrice;\n    }, 0);\n  }\n  parsePrice(price) {\n    if (typeof price === 'number') {\n      return price;\n    }\n    if (typeof price === 'string') {\n      const cleanedPrice = price.replace(/[^\\d.-]/g, '');\n      const parsedPrice = parseFloat(cleanedPrice);\n      return isNaN(parsedPrice) ? 0 : parsedPrice;\n    }\n    return 0;\n  }\n  processOrder() {\n    this.checkLoginStatus();\n    if (!this.isLoggedIn) {\n      this.router.navigate(['/login']);\n      return;\n    }\n    this.loading = true;\n    this.error = null;\n    const userId = this.authService.getUserId();\n    if (userId === null) {\n      this.error = 'Error al obtener la información del usuario';\n      this.loading = false;\n      return;\n    }\n    const total = this.getTotal();\n    this.purchaseService.processOrder(userId, this.cartItems, total).subscribe(purchase => {\n      this.loading = false;\n      this.cartItems = [];\n      this.saveCartToLocalStorage();\n      alert('Orden procesada con éxito!');\n    }, error => {\n      this.loading = false;\n      this.error = error.message || 'Error al procesar la orden';\n    });\n  }\n  getUserFunds() {\n    return this.authService.getUserFunds();\n  }\n  hasSufficientFunds() {\n    const userFunds = this.getUserFunds();\n    const total = this.getTotal();\n    return userFunds >= total;\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"mappings":"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","names":["Component","CartComponent","constructor","purchaseService","router","authService","ngOnInit","loadCartFromLocalStorage","checkLoginStatus","isLoggedIn","loading","cartData","localStorage","getItem","cartItems","JSON","parse","e","error","saveCartToLocalStorage","setItem","stringify","addToCart","product","push","removeFromCart","index","findIndex","item","idProduct","splice","getTotal","reduce","total","itemPrice","parsePrice","price","cleanedPrice","replace","parsedPrice","parseFloat","isNaN","processOrder","navigate","userId","getUserId","subscribe","purchase","alert","message","getUserFunds","hasSufficientFunds","userFunds","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\cruza\\Ecommerce Front\\src\\components\\cart\\cart.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PurchaseService } from 'src/app/adapters/purchase.repository.adapter';\r\nimport { Product } from 'src/app/model/product';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cartItems: Product[] = [];\r\n  loading: boolean = false;\r\n  error: string | null = null;\r\n  isLoggedIn: boolean = false;\r\n\r\n  constructor(\r\n    private purchaseService: PurchaseService,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadCartFromLocalStorage();\r\n    this.checkLoginStatus();\r\n  }\r\n\r\n  checkLoginStatus() {\r\n    this.isLoggedIn = this.authService.isLoggedIn();\r\n  }\r\n\r\n  loadCartFromLocalStorage() {\r\n    this.loading = true;\r\n    try {\r\n      const cartData = localStorage.getItem('cart');\r\n      if (cartData) {\r\n        this.cartItems = JSON.parse(cartData);\r\n      }\r\n      this.loading = false;\r\n    } catch (e) {\r\n      this.error = 'Error al cargar el carrito';\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  saveCartToLocalStorage() {\r\n    try {\r\n      localStorage.setItem('cart', JSON.stringify(this.cartItems));\r\n    } catch (e) {\r\n      this.error = 'Error al guardar el carrito';\r\n    }\r\n  }\r\n\r\n  addToCart(product: Product) {\r\n    this.cartItems.push(product);\r\n    this.saveCartToLocalStorage();\r\n  }\r\n\r\n  removeFromCart(product: Product) {\r\n    const index = this.cartItems.findIndex(item => item.idProduct === product.idProduct);\r\n    if (index > -1) {\r\n      this.cartItems.splice(index, 1);\r\n      this.saveCartToLocalStorage();\r\n    }\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.cartItems.reduce((total, item) => {\r\n      const itemPrice = this.parsePrice(item.price);\r\n      return total + itemPrice;\r\n    }, 0);\r\n  }\r\n\r\n  private parsePrice(price: unknown): number {\r\n    if (typeof price === 'number') {\r\n      return price;\r\n    }\r\n    if (typeof price === 'string') {\r\n      const cleanedPrice = price.replace(/[^\\d.-]/g, '');\r\n      const parsedPrice = parseFloat(cleanedPrice);\r\n      return isNaN(parsedPrice) ? 0 : parsedPrice;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  processOrder() {\r\n    this.checkLoginStatus();\r\n\r\n    if (!this.isLoggedIn) {\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = null;\r\n    const userId = this.authService.getUserId();\r\n    if (userId === null) {\r\n      this.error = 'Error al obtener la información del usuario';\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    const total = this.getTotal();\r\n\r\n    this.purchaseService.processOrder(userId, this.cartItems, total).subscribe(\r\n      (purchase) => {\r\n        this.loading = false;\r\n        this.cartItems = [];\r\n        this.saveCartToLocalStorage();\r\n        alert('Orden procesada con éxito!');\r\n      },\r\n      (error) => {\r\n        this.loading = false;\r\n        this.error = error.message || 'Error al procesar la orden';\r\n      }\r\n    );\r\n  }\r\n\r\n  getUserFunds(): number {\r\n    return this.authService.getUserFunds();\r\n  }\r\n\r\n  hasSufficientFunds(): boolean {\r\n    const userFunds = this.getUserFunds();\r\n    const total = this.getTotal();\r\n    return userFunds >= total;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}