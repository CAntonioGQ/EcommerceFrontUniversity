{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isLoggedInSubject = new BehaviorSubject(this.checkInitialLoginState());\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n    console.log('AuthService inicializado. Estado inicial de sesión:', this.isLoggedInSubject.value);\n  }\n  checkInitialLoginState() {\n    const userData = localStorage.getItem('user');\n    const isLoggedIn = !!userData;\n    console.log('Estado inicial de sesión:', isLoggedIn);\n    return isLoggedIn;\n  }\n  isLoggedIn() {\n    return this.isLoggedInSubject.value;\n  }\n  login(userData) {\n    localStorage.setItem('user', JSON.stringify(userData));\n    this.isLoggedInSubject.next(true);\n    console.log('Usuario ha iniciado sesión');\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.isLoggedInSubject.next(false);\n    console.log('Usuario ha cerrado sesión');\n  }\n  getUserId() {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      const user = JSON.parse(userData);\n      return user.idUser || null;\n    }\n    return null;\n  }\n  getUserFunds() {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      const user = JSON.parse(userData);\n      return user.funds || 0;\n    }\n    return 0;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,WAAW;EAItBC;IAHQ,sBAAiB,GAAG,IAAIF,eAAe,CAAU,IAAI,CAACG,sBAAsB,EAAE,CAAC;IACvF,gBAAW,GAAwB,IAAI,CAACC,iBAAiB,CAACC,YAAY,EAAE;IAGtEC,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAE,IAAI,CAACH,iBAAiB,CAACI,KAAK,CAAC;EAClG;EAEQL,sBAAsB;IAC5B,MAAMM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,MAAMC,UAAU,GAAG,CAAC,CAACH,QAAQ;IAC7BH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEK,UAAU,CAAC;IACpD,OAAOA,UAAU;EACnB;EAEAA,UAAU;IACR,OAAO,IAAI,CAACR,iBAAiB,CAACI,KAAK;EACrC;EAEAK,KAAK,CAACJ,QAAa;IACjBC,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,CAAC;IACtD,IAAI,CAACL,iBAAiB,CAACa,IAAI,CAAC,IAAI,CAAC;IACjCX,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C;EAEAW,MAAM;IACJR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACf,iBAAiB,CAACa,IAAI,CAAC,KAAK,CAAC;IAClCX,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C;EAEAa,SAAS;IACP,MAAMX,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,QAAQ,EAAE;MACZ,MAAMY,IAAI,GAAGN,IAAI,CAACO,KAAK,CAACb,QAAQ,CAAC;MACjC,OAAOY,IAAI,CAACE,MAAM,IAAI,IAAI;;IAE5B,OAAO,IAAI;EACb;EAEAC,YAAY;IACV,MAAMf,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,QAAQ,EAAE;MACZ,MAAMY,IAAI,GAAGN,IAAI,CAACO,KAAK,CAACb,QAAQ,CAAC;MACjC,OAAOY,IAAI,CAACI,KAAK,IAAI,CAAC;;IAExB,OAAO,CAAC;EACV;EAAC;qBA/CUxB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAyB,SAAXzB,WAAW;IAAA0B,YAFV;EAAM","names":["BehaviorSubject","AuthService","constructor","checkInitialLoginState","isLoggedInSubject","asObservable","console","log","value","userData","localStorage","getItem","isLoggedIn","login","setItem","JSON","stringify","next","logout","removeItem","getUserId","user","parse","idUser","getUserFunds","funds","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\cruza\\Ecommerce Front\\src\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isLoggedInSubject = new BehaviorSubject<boolean>(this.checkInitialLoginState());\r\n  isLoggedIn$: Observable<boolean> = this.isLoggedInSubject.asObservable();\r\n\r\n  constructor() {\r\n    console.log('AuthService inicializado. Estado inicial de sesión:', this.isLoggedInSubject.value);\r\n  }\r\n\r\n  private checkInitialLoginState(): boolean {\r\n    const userData = localStorage.getItem('user');\r\n    const isLoggedIn = !!userData;\r\n    console.log('Estado inicial de sesión:', isLoggedIn);\r\n    return isLoggedIn;\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.isLoggedInSubject.value;\r\n  }\r\n\r\n  login(userData: any) {\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    this.isLoggedInSubject.next(true);\r\n    console.log('Usuario ha iniciado sesión');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.isLoggedInSubject.next(false);\r\n    console.log('Usuario ha cerrado sesión');\r\n  }\r\n\r\n  getUserId(): number | null {\r\n    const userData = localStorage.getItem('user');\r\n    if (userData) {\r\n      const user = JSON.parse(userData);\r\n      return user.idUser || null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getUserFunds(): number {\r\n    const userData = localStorage.getItem('user');\r\n    if (userData) {\r\n      const user = JSON.parse(userData);\r\n      return user.funds || 0;\r\n    }\r\n    return 0;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}