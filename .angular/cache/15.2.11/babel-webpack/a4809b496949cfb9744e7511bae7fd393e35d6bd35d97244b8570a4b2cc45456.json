{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CardService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3030/api/cards';\n  }\n  getCards() {\n    return this.http.get(this.apiUrl);\n  }\n  getCard(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createCard(card) {\n    return this.http.post(this.apiUrl, card);\n  }\n  updateCard(id, card) {\n    return this.http.put(`${this.apiUrl}/${id}`, card);\n  }\n  static #_ = this.ɵfac = function CardService_Factory(t) {\n    return new (t || CardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CardService,\n    factory: CardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC;EAEV;EAExCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,MAAM,CAAC;EAC3C;EAEAC,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAO,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EACpD;EAEAC,UAAU,CAACC,IAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EAChD;EAEAE,UAAU,CAACJ,EAAU,EAAEE,IAAmB;IACxC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACP,MAAM,IAAIE,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC1D;EAAC;qBAnBUT,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAa,SAAXb,WAAW;IAAAc,YAFV;EAAM","names":["CardService","constructor","http","getCards","get","apiUrl","getCard","id","createCard","card","post","updateCard","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\cruza\\Ecommerce Front\\src\\app\\adapters\\card.repository.adapter.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Card } from '../model/card';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CardService {\r\n  private apiUrl = 'http://localhost:3030/api/cards';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCards(): Observable<Card[]> {\r\n    return this.http.get<Card[]>(this.apiUrl);\r\n  }\r\n\r\n  getCard(id: number): Observable<Card> {\r\n    return this.http.get<Card>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createCard(card: Card): Observable<Card> {\r\n    return this.http.post<Card>(this.apiUrl, card);\r\n  }\r\n\r\n  updateCard(id: number, card: Partial<Card>): Observable<Card> {\r\n    return this.http.put<Card>(`${this.apiUrl}/${id}`, card);\r\n  }\r\n  \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}