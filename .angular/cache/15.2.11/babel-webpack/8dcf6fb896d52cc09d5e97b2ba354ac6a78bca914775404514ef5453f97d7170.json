{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isLoggedInSubject = new BehaviorSubject(this.checkInitialLoginState());\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n    this.currentUserSubject = new BehaviorSubject(this.getCurrentUser());\n    this.currentUser$ = this.currentUserSubject.asObservable();\n    console.log('AuthService inicializado. Estado inicial de sesión:', this.isLoggedInSubject.value);\n  }\n  checkInitialLoginState() {\n    const userData = localStorage.getItem('user');\n    const isLoggedIn = !!userData;\n    console.log('Estado inicial de sesión:', isLoggedIn);\n    return isLoggedIn;\n  }\n  getCurrentUser() {\n    const userData = localStorage.getItem('user');\n    return userData ? JSON.parse(userData) : null;\n  }\n  isLoggedIn() {\n    return this.isLoggedInSubject.value;\n  }\n  login(userData) {\n    localStorage.setItem('user', JSON.stringify(userData));\n    this.isLoggedInSubject.next(true);\n    this.currentUserSubject.next(userData);\n    console.log('Usuario ha iniciado sesión');\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.isLoggedInSubject.next(false);\n    this.currentUserSubject.next(null);\n    console.log('Usuario ha cerrado sesión');\n  }\n  getUserId() {\n    const currentUser = this.currentUserSubject.value;\n    return currentUser ? currentUser.id : null;\n  }\n  getUserFunds() {\n    const currentUser = this.currentUserSubject.value;\n    return currentUser ? currentUser.funds : 0;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,WAAW;EAOtBC;IANQ,sBAAiB,GAAG,IAAIF,eAAe,CAAU,IAAI,CAACG,sBAAsB,EAAE,CAAC;IACvF,gBAAW,GAAwB,IAAI,CAACC,iBAAiB,CAACC,YAAY,EAAE;IAEhE,uBAAkB,GAAG,IAAIL,eAAe,CAAc,IAAI,CAACM,cAAc,EAAE,CAAC;IACpF,iBAAY,GAA4B,IAAI,CAACC,kBAAkB,CAACF,YAAY,EAAE;IAG5EG,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAE,IAAI,CAACL,iBAAiB,CAACM,KAAK,CAAC;EAClG;EAEQP,sBAAsB;IAC5B,MAAMQ,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,MAAMC,UAAU,GAAG,CAAC,CAACH,QAAQ;IAC7BH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEK,UAAU,CAAC;IACpD,OAAOA,UAAU;EACnB;EAEQR,cAAc;IACpB,MAAMK,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,OAAOF,QAAQ,GAAGI,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,GAAG,IAAI;EAC/C;EAEAG,UAAU;IACR,OAAO,IAAI,CAACV,iBAAiB,CAACM,KAAK;EACrC;EAEAO,KAAK,CAACN,QAAc;IAClBC,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEH,IAAI,CAACI,SAAS,CAACR,QAAQ,CAAC,CAAC;IACtD,IAAI,CAACP,iBAAiB,CAACgB,IAAI,CAAC,IAAI,CAAC;IACjC,IAAI,CAACb,kBAAkB,CAACa,IAAI,CAACT,QAAQ,CAAC;IACtCH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C;EAEAY,MAAM;IACJT,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAAClB,iBAAiB,CAACgB,IAAI,CAAC,KAAK,CAAC;IAClC,IAAI,CAACb,kBAAkB,CAACa,IAAI,CAAC,IAAI,CAAC;IAClCZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C;EAEAc,SAAS;IACP,MAAMC,WAAW,GAAG,IAAI,CAACjB,kBAAkB,CAACG,KAAK;IACjD,OAAOc,WAAW,GAAGA,WAAW,CAACC,EAAE,GAAG,IAAI;EAC5C;EAEAC,YAAY;IACV,MAAMF,WAAW,GAAG,IAAI,CAACjB,kBAAkB,CAACG,KAAK;IACjD,OAAOc,WAAW,GAAGA,WAAW,CAACG,KAAK,GAAG,CAAC;EAC5C;EAAC;qBAjDU1B,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAA2B,SAAX3B,WAAW;IAAA4B,YAFV;EAAM","names":["BehaviorSubject","AuthService","constructor","checkInitialLoginState","isLoggedInSubject","asObservable","getCurrentUser","currentUserSubject","console","log","value","userData","localStorage","getItem","isLoggedIn","JSON","parse","login","setItem","stringify","next","logout","removeItem","getUserId","currentUser","id","getUserFunds","funds","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\cruza\\Ecommerce Front\\src\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from 'src/app/model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isLoggedInSubject = new BehaviorSubject<boolean>(this.checkInitialLoginState());\r\n  isLoggedIn$: Observable<boolean> = this.isLoggedInSubject.asObservable();\r\n\r\n  private currentUserSubject = new BehaviorSubject<User | null>(this.getCurrentUser());\r\n  currentUser$: Observable<User | null> = this.currentUserSubject.asObservable();\r\n\r\n  constructor() {\r\n    console.log('AuthService inicializado. Estado inicial de sesión:', this.isLoggedInSubject.value);\r\n  }\r\n\r\n  private checkInitialLoginState(): boolean {\r\n    const userData = localStorage.getItem('user');\r\n    const isLoggedIn = !!userData;\r\n    console.log('Estado inicial de sesión:', isLoggedIn);\r\n    return isLoggedIn;\r\n  }\r\n\r\n  private getCurrentUser(): User | null {\r\n    const userData = localStorage.getItem('user');\r\n    return userData ? JSON.parse(userData) : null;\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.isLoggedInSubject.value;\r\n  }\r\n\r\n  login(userData: User) {\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    this.isLoggedInSubject.next(true);\r\n    this.currentUserSubject.next(userData);\r\n    console.log('Usuario ha iniciado sesión');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.isLoggedInSubject.next(false);\r\n    this.currentUserSubject.next(null);\r\n    console.log('Usuario ha cerrado sesión');\r\n  }\r\n\r\n  getUserId(): number | null {\r\n    const currentUser = this.currentUserSubject.value;\r\n    return currentUser ? currentUser.id : null;\r\n  }\r\n\r\n  getUserFunds(): number {\r\n    const currentUser = this.currentUserSubject.value;\r\n    return currentUser ? currentUser.funds : 0;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}