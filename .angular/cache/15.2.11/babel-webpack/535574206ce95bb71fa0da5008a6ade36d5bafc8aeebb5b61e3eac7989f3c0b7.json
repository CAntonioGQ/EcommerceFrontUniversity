{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/products';\n  }\n  getProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  getProduct(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createProduct(product) {\n    return this.http.post(this.apiUrl, product);\n  }\n  updateProduct(id, product) {\n    return this.http.put(`${this.apiUrl}/${id}`, product);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,oCAAoC;EAEb;EAExCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC;EAC9C;EAEAC,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EACvD;EAEAC,aAAa,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACL,MAAM,EAAEI,OAAO,CAAC;EACtD;EAEAE,aAAa,CAACJ,EAAU,EAAEE,OAAyB;IACjD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACP,MAAM,IAAIE,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAAC;qBAnBUT,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAa,SAAdb,cAAc;IAAAc,YAFb;EAAM","names":["ProductService","constructor","http","getProducts","get","apiUrl","getProduct","id","createProduct","product","post","updateProduct","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\cruza\\Ecommerce Front\\src\\app\\adapters\\product.repository.adapter.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../model/product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl = 'http://localhost:3000/api/products';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.apiUrl);\r\n  }\r\n\r\n  getProduct(id: number): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createProduct(product: Product): Observable<Product> {\r\n    return this.http.post<Product>(this.apiUrl, product);\r\n  }\r\n\r\n  updateProduct(id: number, product: Partial<Product>): Observable<Product> {\r\n    return this.http.put<Product>(`${this.apiUrl}/${id}`, product);\r\n  }\r\n  \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}