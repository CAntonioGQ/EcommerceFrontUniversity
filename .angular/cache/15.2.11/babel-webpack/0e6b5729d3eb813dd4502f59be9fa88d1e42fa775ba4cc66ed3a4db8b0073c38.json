{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid && this.passwordMatch()) {\n      console.log('Formulario válido:', this.registerForm.value);\n      this.router.navigate(['/']);\n    } else {\n      console.log('Formulario inválido o contraseñas no coinciden');\n    }\n  }\n  // Comprobar si las contraseñas coinciden\n  passwordMatch() {\n    const password = this.registerForm.get('password')?.value;\n    const confirmPassword = this.registerForm.get('confirmPassword')?.value;\n    return password === confirmPassword;\n  }\n  // Redirigir a la página de inicio de sesión si el usuario ya tiene una cuenta\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAM5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YAAoBC,EAAe,EAAUC,MAAc;IAAvC,OAAE,GAAFD,EAAE;IAAuB,WAAM,GAANC,MAAM;IACjD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,eAAe,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACQ,QAAQ;KAC1C,CAAC;EACJ;EAEAK,QAAQ;IACN,IAAI,IAAI,CAACR,YAAY,CAACS,KAAK,IAAI,IAAI,CAACC,aAAa,EAAE,EAAE;MACnDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACZ,YAAY,CAACa,KAAK,CAAC;MAC1D,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;KAC5B,MAAM;MACLH,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;;EAEjE;EAEA;EACAF,aAAa;IACX,MAAML,QAAQ,GAAG,IAAI,CAACL,YAAY,CAACe,GAAG,CAAC,UAAU,CAAC,EAAEF,KAAK;IACzD,MAAMN,eAAe,GAAG,IAAI,CAACP,YAAY,CAACe,GAAG,CAAC,iBAAiB,CAAC,EAAEF,KAAK;IACvE,OAAOR,QAAQ,KAAKE,eAAe;EACrC;EAEA;EACAS,SAAS;IACP,IAAI,CAACjB,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;CACD;AAhCYlB,iBAAiB,eAJ7BF,SAAS,CAAC;EACTuB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE;CACd,CAAC,GACWtB,iBAAiB,CAgC7B;SAhCYA,iBAAiB","names":["Component","Validators","RegisterComponent","constructor","fb","router","registerForm","group","name","required","email","password","minLength","confirmPassword","onSubmit","valid","passwordMatch","console","log","value","navigate","get","goToLogin","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\cruza\\Ecommerce Front\\src\\components\\register-login\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent {\r\n  registerForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router) {\r\n    this.registerForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.registerForm.valid && this.passwordMatch()) {\r\n      console.log('Formulario válido:', this.registerForm.value);\r\n      this.router.navigate(['/']);\r\n    } else {\r\n      console.log('Formulario inválido o contraseñas no coinciden');\r\n    }\r\n  }\r\n\r\n  // Comprobar si las contraseñas coinciden\r\n  passwordMatch(): boolean {\r\n    const password = this.registerForm.get('password')?.value;\r\n    const confirmPassword = this.registerForm.get('confirmPassword')?.value;\r\n    return password === confirmPassword;\r\n  }\r\n\r\n  // Redirigir a la página de inicio de sesión si el usuario ya tiene una cuenta\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}