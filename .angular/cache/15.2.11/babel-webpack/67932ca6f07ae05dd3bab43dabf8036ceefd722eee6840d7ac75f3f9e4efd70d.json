{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PurchaseService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3030/api/purchases';\n  }\n  getPurchases() {\n    return this.http.get(this.apiUrl);\n  }\n  getPurchase(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createPurchase(purchase) {\n    return this.http.post(this.apiUrl, purchase);\n  }\n  updatePurchase(id, purchase) {\n    return this.http.put(`${this.apiUrl}/${id}`, purchase);\n  }\n  processOrder(idUser, products, total) {\n    return this.http.post(this.apiUrl, {\n      idUser,\n      products,\n      total\n    });\n  }\n  static #_ = this.ɵfac = function PurchaseService_Factory(t) {\n    return new (t || PurchaseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PurchaseService,\n    factory: PurchaseService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,qCAAqC;EAEd;EAExCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,MAAM,CAAC;EAC/C;EAEAC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EACxD;EAEAC,cAAc,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAW,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EACxD;EAEAE,cAAc,CAACJ,EAAU,EAAEE,QAA2B;IACpD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACP,MAAM,IAAIE,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAClE;EACAI,YAAY,CAACC,MAAc,EAAEC,QAAmB,EAAEC,KAAa;IAC7D,OAAO,IAAI,CAACd,IAAI,CAACQ,IAAI,CAAW,IAAI,CAACL,MAAM,EAAE;MAAES,MAAM;MAAEC,QAAQ;MAAEC;IAAK,CAAE,CAAC;EAC3E;EAAC;qBAtBUhB,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAiB,SAAfjB,eAAe;IAAAkB,YAFd;EAAM","names":["PurchaseService","constructor","http","getPurchases","get","apiUrl","getPurchase","id","createPurchase","purchase","post","updatePurchase","put","processOrder","idUser","products","total","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\cruza\\Ecommerce Front\\src\\app\\adapters\\purchase.repository.adapter.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Purchase } from '../model/purchase';\r\nimport { Product } from '../model/product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PurchaseService {\r\n  private apiUrl = 'http://localhost:3030/api/purchases';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPurchases(): Observable<Purchase[]> {\r\n    return this.http.get<Purchase[]>(this.apiUrl);\r\n  }\r\n\r\n  getPurchase(id: number): Observable<Purchase> {\r\n    return this.http.get<Purchase>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createPurchase(purchase: Purchase): Observable<Purchase> {\r\n    return this.http.post<Purchase>(this.apiUrl, purchase);\r\n  }\r\n\r\n  updatePurchase(id: number, purchase: Partial<Purchase>): Observable<Purchase> {\r\n    return this.http.put<Purchase>(`${this.apiUrl}/${id}`, purchase);\r\n  }\r\n  processOrder(idUser: number, products: Product[], total: number): Observable<Purchase> {\r\n    return this.http.post<Purchase>(this.apiUrl, { idUser, products, total });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}